version: '3.7'
services:
    nginx:
        image: nginx:1.17.9
        container_name: docker-test-symfony-nginx
        volumes:
            - ./:/var/www/app
            - .Docker/Nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .Docker/Nginx/default.conf:/etc/nginx/sites-enabled/default
        ports:
            # host:container
            - 8070:80
        # "depends_on" - prevents container to start before other container, on
        # which it depends
        depends_on:
            - php-app
        networks:
            - docker-test-symfony

    php-app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: docker-test-symfony-phpapp
        environment:
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_HOST=${DATABASE_HOST}
            - DATABASE_NAME=${DATABASE_NAME}
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
        volumes:
            - ./:/var/www/app
        networks:
            - docker-test-symfony

    database:
        image: mariadb:10.5.2
        container_name: docker-test-symfony-mariadb
        environment:
            - MYSQL_DATABASE=${DATABASE_NAME}
            - MYSQL_ROOT_PASSWORD=root
        volumes:
            # This will run the initData.sql script after the server is
            # initialized. It's good for creating additional databases, users,
            # etc.
            - .Docker/MariaDb/initData.sql:/docker-entrypoint-initdb.d/data.sql
        networks:
            - docker-test-symfony

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: docker-test-symfony-phpmyadmin
        volumes:
            - .Docker/PhpMyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
        ports:
            - 8071:80
        depends_on:
            - database
        environment:
            PMA_HOST: database
        networks:
            - docker-test-symfony

    mailcatcher:
        image: tophfr/mailcatcher
        ports:
            - 1070:80
            - 1025:25
        networks:
            - docker-test-symfony

networks:
    docker-test-symfony:

# To build and run:
# docker-compose build --no-cache
# docker-compose up

# To log into the php-app:
# docker exec -it docker-test-symfony-phpapp bash
